## Assignment 1 - Zip Password Cracker

### Situation Brief
After your companies head sales person left his position you discover that he used password protected zip files to store all the company spreadsheets containing critical contacts information and account numbers. You have been told by one of his co-workers that his password was the digits of a phone number, but you don't know what phone number. It could be any digit valid phone number in the format 1800555xxxx where xxxx is any digit between 0 and 9. You have been asked to write a tool to determine the password.

### Tool Requirements
You must develop a tool called "zip_crack.py". It will take one argument which will be the complete path to a password protected zip file. To determine the correct password you can repeatedly execute the "unzip" command which is in the same directory as this file and pass password attempts.

############### CODE ###############

#!/usr/bin/env python3
import sys
import subprocess
import pathlib

def attempt_password(path_to_zip_file, password_attempt):
    """Given a path to a zip file and a password attempt, return True if the password attempt is correct, False otherwise"""
    zip_path = pathlib.Path(path_to_zip_file)
    if not zip_path.exists():
        return False
    result = subprocess.run(
        ["unzip", "-P", password_attempt, path_to_zip_file],
        capture_output=True,
        input=b"y\n"
    )
    return result.returncode == 0

def main(path_to_zip_file):
    """Loops through all possible phone numbers that start with 1800555xxxx and attempts to use it to unlock the zip file"""
    prefix = "1800555"
    for i in range(10000):  # from 0000 to 9999
        suffix = str(i).zfill(4)  # ensures suffix is always 4 digits
        password_attempt = prefix + suffix
        if attempt_password(path_to_zip_file, password_attempt):
            return password_attempt
    return "PASSWORD NOT FOUND"

if __name__ == "__main__":
    zip_path = sys.argv[1]    
    result = main(zip_path)
    print(result)
